// store A, B, C and D

001000_00000_01001_0000000000000111		// addi $t1, $zero, 0x7
101011_00000_01001_0000000000000000 	// sw $t1, 0($zero)
001000_00000_01001_0000000000000101		// addi $t1, $zero, 0x5
101011_00000_01001_0000000000000001 	// sw $t1, 1($zero)
001000_00000_01001_0000000000000010		// addi $t1, $zero, 0x2
101011_00000_01001_0000000000000010 	// sw $t1, 2($zero)
001000_00000_01001_0000000000000100		// addi $t1, $zero, 0x4
101011_00000_01001_0000000000000011 	// sw $t1, 3($zero)

// 1
// if (A â€“ B) > 3

100011_00000_01001_0000000000000000		// lw $t1 0($zero)
100011_00000_01010_0000000000000001		// lw $t2 1($zero)
000000_10010_01001_01001_00000_100010 	// sub $t1, $t1, $t2
001000_00000_01011_0000000000000011 	// addi $t3, $zero, 0x3
000111_01001_01011_0000000001010000 	// bgt $t1, $t3, DO -> adrx 76, 										// imem[19]

// 3
// C = C << 5;
// *dPtr = 7;

100011_00000_01001_0000000000000010 	// lw $t1, 2($zero)
000000_00000_01001_01001_00101_000000 	// sll $t1, $t1, 5
101011_00000_01001_0000000000000010 	// sw $t1, 2($zero)

001000_00000_01100_0000000000000111 	// addi $t4, $zero, 0x7
101011_00000_01100_0000000000000011 	// sw $t4, 3($zero)

000010_00000000000000000001100100 		// j END -> adrx 96, imem[24]

// 2
// C = 6;
// D = D << 2

// [0x0040004C] imem[19] DO:

001000_00000_01100_0000000000000110		// addi $t4, $zero, 0x6
101011_00000_01100_0000000000000010 	// sw $t4, 2($zero)

100011_00000_01001_0000000000000011 	// lw $t1, 3($zero)
000000_00000_01001_01001_00010_000000 	// sll $t1, $t1, 2
101011_00000_01001_0000000000000011 	// sw $t1, 3($zero)

// [0x00400060] imem[24] END:
